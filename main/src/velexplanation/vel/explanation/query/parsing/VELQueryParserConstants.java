/* Generated By:JavaCC: Do not edit this line. VELQueryParserConstants.java */
/* Insert the default contents of the file here.  May need imoprts etc.
 */
package velexplanation.vel.explanation.query.parsing;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface VELQueryParserConstants {

    /**
     * End of File.
     */
    int EOF = 0;
    /**
     * RegularExpression Id.
     */
    int WHY = 5;
    /**
     * RegularExpression Id.
     */
    int QM = 6;
    /**
     * RegularExpression Id.
     */
    int FOP = 7;
    /**
     * RegularExpression Id.
     */
    int GOP = 8;
    /**
     * RegularExpression Id.
     */
    int XOP = 9;
    /**
     * RegularExpression Id.
     */
    int NEG = 10;
    /**
     * RegularExpression Id.
     */
    int UOP = 11;
    /**
     * RegularExpression Id.
     */
    int VOP = 12;
    /**
     * RegularExpression Id.
     */
    int WOP = 13;
    /**
     * RegularExpression Id.
     */
    int AND = 14;
    /**
     * RegularExpression Id.
     */
    int OR = 15;
    /**
     * RegularExpression Id.
     */
    int IMP = 16;
    /**
     * RegularExpression Id.
     */
    int LPAR = 17;
    /**
     * RegularExpression Id.
     */
    int RPAR = 18;
    /**
     * RegularExpression Id.
     */
    int COM = 19;
    /**
     * RegularExpression Id.
     */
    int COL = 20;
    /**
     * RegularExpression Id.
     */
    int UNIV = 21;
    /**
     * RegularExpression Id.
     */
    int EXIS = 22;
    /**
     * RegularExpression Id.
     */
    int TRUE = 23;
    /**
     * RegularExpression Id.
     */
    int FALSE = 24;
    /**
     * RegularExpression Id.
     */
    int ID = 25;
    /**
     * RegularExpression Id.
     */
    int NUM = 26;

    /**
     * Lexical state.
     */
    int DEFAULT = 0;

    /**
     * Literal token values.
     */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\r\"",
            "\"\\t\"",
            "\"\\n\"",
            "\"Why\"",
            "\"?\"",
            "\"F\"",
            "\"G\"",
            "\"X\"",
            "\"!\"",
            "\"U\"",
            "\"V\"",
            "\"W\"",
            "\"&\"",
            "\"|\"",
            "\"->\"",
            "\"(\"",
            "\")\"",
            "\",\"",
            "\":\"",
            "\"A\"",
            "\"E\"",
            "<TRUE>",
            "<FALSE>",
            "<ID>",
            "<NUM>",
    };

}
